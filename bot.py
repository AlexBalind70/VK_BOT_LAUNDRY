# -*- coding: utf-8 -*-

import re
import csv
from datetime import date
import requests
import threading

import vk_api
from vk_api.utils import get_random_id
from vk_api.longpoll import VkLongPoll


from database_main import *
from keyboard_bot import Menu_Keyboard
from db_position import PositionUser


class Bot_Main(object):
    def __init__(self):
        self.laundry_db = LaundryScheduler()
        self.db_position = PositionUser()
        self.menu_keyboard = Menu_Keyboard()

        token = ""
        self.authorize = vk_api.VkApi(token=token)
        self.vk = self.authorize.get_api()
        self.longpoll = VkLongPoll(self.authorize)

        try:
            for event in self.longpoll.listen():
                if event.type == vk_api.longpoll.VkEventType.MESSAGE_NEW and event.to_me and event.text:
                        self.response = self.vk.users.get(user_ids=event.user_id)
                        self.first_name = self.response[0]['first_name']
                        self.last_name = self.response[0]['last_name']
                        self.db_position.add_new_user(event.user_id)
                        threading.Thread(target=self.processing_message, args=(event.user_id, event.text)).start()
        except ConnectionError or ExceptionGroup:
            pass

    def write_message(self, sender, message, keyboard=None):
        try:
            post = {
                'user_id': sender,
                'message': message,
                'random_id': get_random_id()
            }

            if keyboard is not None:
                post['keyboard'] = keyboard.get_keyboard()

            self.authorize.method('messages.send', post)
        except Exception as e:
            self.sender_chat("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \n"
                                          f"\n –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.first_name} {self.last_name}"
                                          f"\n Id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {sender}")
            pass

    def sender_chat(self, message):
        self.authorize.method('messages.send',
                              {'chat_id': 1,
                               'message': message,
                               'random_id': get_random_id()
                               })

    def processing_message(self, sender, received_message):
        number_position = self.db_position.take_position(sender)
        self.laundry_db.scheduler = LaundryScheduler()
        match number_position:
            case "1":
                self.start_menu(sender, received_message)

            case "2":
                if received_message == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                    self.back_menu(sender)

                elif self.laundry_db.is_valid_date(received_message) and not self.laundry_db.is_past_date(
                        received_message):
                    self.search_date = received_message
                    self.write_message(sender, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω (–≤ —Ñ–æ—Ä–º–∞—Ç–µ —á—á:–º–º-—á—á:–º–º):",
                                       self.menu_keyboard.keyboard_menu_time)
                    self.db_position.update_position(sender, "3")

                else:
                    self.write_message(sender,
                                       "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É –∏–ª–∏ –¥–∞—Ç–∞ —É–∂–µ –ø—Ä–æ—à–ª–∞. "
                                       "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å—Ç–∏—Ä–∫—É, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥):")

            case "3":
                if received_message == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                    self.back_menu(sender)

                elif self.laundry_db.validate_time_format(received_message):
                    self.search_time = received_message
                    self.user_time(sender, self.search_date, self.search_time)

                else:
                    self.write_message(sender, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω (–≤ —Ñ–æ—Ä–º–∞—Ç–µ "
                                               "—á—á:–º–º-—á—á:–º–º):")

            case "4":
                self.user_room(sender, received_message)

            case "5":
                self.record_confirmation(sender, received_message)

            case "6":
                self.other_peoples_things(sender, received_message)

            case "7":
                self.admin_panel(sender, received_message)

            case "8":
                self.send_file_laundry(sender, received_message)

            case "9":
                self.send_file_ban(sender, received_message)

            case "10":
                self.add_user_ban(sender, received_message)

            case "11":
                self.send_all_user(sender, received_message)

            case "12":
                self.add_admin(sender, received_message)

    def start_menu(self, sender, received_message):
        match received_message:
            case ["–ù–∞—á–∞—Ç—å", "–ú–µ–Ω—é"]:
                self.write_message(sender,
                                   f"–ü—Ä–∏–≤–µ—Ç {self.first_name}! \n\n–°–µ–π—á–∞—Å —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –í–Ω–∏–∑—É —Ä–∞—Å–ø–∞–ª–∞–≥—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏, –Ω–∞–∂–∏–º–∞—è –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å –Ω–∞ —Å—Ç–∏—Ä–∫—É, —É–∑–Ω–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —Å—Ç–∏—Ä–∫–∏ –∏",
                                   self.menu_keyboard.keyboard_menu)

            case "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                self.back_menu(sender)

            case "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç–∏—Ä–∫—É":
                ban = self.db_position.take_ban(sender)
                if ban == "0":
                    self.write_message(sender, "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å—Ç–∏—Ä–∫—É, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥):")
                    self.db_position.update_position(sender, "2")
                else:
                    self.write_message(sender, "‚ö†Ô∏è –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–ª—è –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ —Å—Ç–∏—Ä–∫–∞! "
                                               "\n\n –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ñ–∏–ª–∏—â–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –†–§–§.",
                                       self.menu_keyboard.keyboard_menu)

            case "–ü—Ä–∞–≤–∏–ª–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å—Ç–∏—Ä–∫—É üìù":
                self.write_message(sender, self.file_messages("static/rools_laundry.txt"), self.menu_keyboard.keyboard_menu)

            case "–ó–∞ —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –±–∞–Ω? üö´":
                self.write_message(sender, self.file_messages("static/ban_files.txt"), self.menu_keyboard.keyboard_menu)

            case "–ß—É–∂–∏–µ –≤–µ—â–∏ –≤ –º–∞—à–∏–Ω–∫–µ":
                self.write_message(sender, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–∞—à–µ–≥–æ —Å–ª—É—á–∞—è:"
                                           "\n\n1. –ú–∞—à–∏–Ω–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞, –Ω–æ —Ç—É—Ç —á—É–∂–∏–µ –≤–µ—â–∏!"
                                           "\n2. –í –º–∞—à–∏–Ω–∫–µ —Å—Ç–∏—Ä–∞—é—Ç—Å—è —á—å–∏-—Ç–æ –≤–µ—â–∏, —Ö–æ—Ç—è –æ—á–µ—Ä–µ–¥—å —Å–µ–π—á–∞—Å –º–æ—è!"
                                           "\n\n–û–¢–ü–†–ê–í–¨–¢–ï –ú–ù–ï –í–ê–® –í–ê–†–ò–ê–ù–¢ –¶–ò–§–†–û–ô –ò–õ–ò –ù–ê–ñ–ú–ò–¢–ï –ù–ê –°–û–û–¢–í–ï–¢–°–¢–í–£–Æ–©–£–Æ –ö–ù–û–ü–ö–£ –í–ù–ò–ó–£‚ùó"
                                   , self.menu_keyboard.keyboard_busy_laundry)
                self.db_position.update_position(sender, 6)

            case "/–∞–¥–º–∏–Ω/":
                self.admin(sender)

            case _:
                self.understand_msg(sender)

    def file_messages(self, file_name):
        file_path = f'{file_name}'

        with open(f"{file_path}", "r", encoding="cp1251") as file:
            file_content = file.read()
        return file_content

    def user_time(self, sender, search_date, search_time):

        if self.laundry_db.is_slot_available(search_date, search_time,1) or self.laundry_db.is_slot_available(search_date,search_time, 2):
            self.db_position.update_position(sender, "4")
            self.write_message(sender, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã:")

        else:
            available_dates = self.laundry_db.find_available_slots(search_date, search_time)
            message = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç—ã.\n\n" \
                            f"–ù–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ –ø–µ—Ä–∏–æ–¥ —Å—Ç–∏—Ä–∫–∏ ({search_time}) —Å–≤–æ–±–æ–¥–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–∏–µ –¥–Ω–∏:\n\n"

            for i, date in enumerate(available_dates):
                message += f"{i + 1}. {date}\n"
            message += "\n–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!"
            self.write_message(sender, message, self.menu_keyboard.keyboard_menu)
            self.db_position.update_position(sender, 1)


    def data_verification(self, sender, search_date, search_time, value_room):
        if not self.laundry_db.check_weekly_limit(value_room, search_date):
            self.write_message(sender, "–ü–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é –¥–∞–≤–∞–π—Ç–µ "
                                    "—Å–≤–µ—Ä–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n"
                                    f"\n–î–∞—Ç–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å—Ç–∏—Ä–∫—É: {search_date}"
                                    f"\n–í—Ä–µ–º—è —Å—Ç–∏—Ä–∫–∏: {search_time}"
                                    f"\n–ù–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã: {value_room}\n\n"
                                    )
            self.db_position.update_position(sender, "5")
            self.write_message(sender, f"–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ "
                                        f"–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "
                                        f"–î–∞/–ù–µ—Ç –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ "
                                        f"–∫–Ω–æ–ø–∫—É, "
                                        f"–∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è "
                                        f"–≤–Ω–∏–∑—É.", self.menu_keyboard.keyboard_confirmation)

        else:
            self.write_message(sender,"–õ–∏–º–∏—Ç —Å—Ç–∏—Ä–æ–∫ –¥–ª—è –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ –∏—Å—á–µ—Ä–ø–∞–Ω. –ï—Å–ª–∏ –≤—ã "
                                "—Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ñ–∏–ª–∏—â–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –†–§–§.",
                                self.menu_keyboard.keyboard_menu)
            self.sender_chat("‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è - –ò—Å—á–µ—Ä–ø–∞–Ω –ª–∏–º–∏—Ç"
                                f"\n–ö–æ–º–∞–Ω–∞—Ç–∞ - {value_room}"
                                f"\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {sender} ({self.first_name} {self.last_name})"
                                )

            self.db_position.update_position(sender, "1")

    def user_room(self, sender, received_message):
            if received_message == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                self.back_menu(sender)

            elif self.laundry_db.is_valid_number(received_message):
                self.value_room = received_message
                self.db_position.update_room(sender, self.value_room)
                self.user_real_room = self.db_position.take_room(sender)
                if self.value_room == self.user_real_room:
                    self.data_verification(sender, self.search_date, self.search_time, self.value_room)

                else:
                    self.write_message(sender, f"–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É. –í—ã –∂–∏–≤—ë—Ç–µ –≤ {self.user_real_room} –∫–æ–º–Ω–∞—Ç–µ. "
                                               f"–ï—Å–ª–∏ —Å—á–∏—Ç–∞–µ—Ç–µ —ç—Ç–æ –æ—à–∏–±–∫–æ–π, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ñ–∏–ª–∏—â–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–µ–π –†–§–§."
                                               f"\n\n–û–¢–ü–†–ê–í–¨–¢–ï, –ü–û–ñ–ê–õ–£–ô–°–¢–ê, –ù–û–ú–ï–† –°–í–û–ï–ô –ö–û–ú–ù–ê–¢–´.", self.menu_keyboard.keyboard_back_menu)

            else:
                self.write_message(sender,
                                   "–í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã –∏–ª–∏ –≤–∞—à–∞ –∫–æ–º–Ω–∞—Ç–∞, –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ "
                                   "–†–∞–¥–∏–æ—Ñ–∏–∑–∏—á–µ—Å–∫–æ–º—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É. –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ –ø–æ –¥—Ä—É–≥–æ–º—É, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ "
                                   "–ñ–∏–ª–∏—â–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –†–§–§."
                                   "\n\n –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç—ã!")

    def record_confirmation(self, sender, received_message):
        if received_message == "–î–∞":
            self.make_reservation(sender, self.search_date, self.search_time, self.value_room)
        elif received_message == "–ù–µ—Ç":
            self.write_message(sender, "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–ø–∏—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. ",
                               self.menu_keyboard.keyboard_menu)
            self.db_position.update_position(sender, "1")
        else:
            self.write_message(sender, "–û–∂–∏–¥–∞—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏...")

    def make_reservation(self, sender, search_date, search_time, value_room):

        try:
            cursor = self.laundry_db.conn.cursor()
            cursor.execute("BEGIN")  # –ù–∞—á–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            if self.laundry_db.is_slot_available(search_date, search_time, 1):
                # –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ—Ç –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
                self.reserve_slot(cursor, value_room, search_date, search_time, slot_number=1)
                self.laundry_db.conn.commit()
                self.write_message(sender, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ —Å—Ç–∏—Ä–∫—É."
                                                f"\n\n–î–∞—Ç–∞: {search_date}"
                                                f"\n–í—Ä–µ–º—è: {search_time}"
                                                f"\n–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∫–∞: 1-—è –æ—Ç –æ–∫–Ω–∞",
                                                self.menu_keyboard.keyboard_menu)
                self.sender_chat("üë§üë§üë§"
                                f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.first_name} {self.last_name}"
                                f"\nId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {sender} "
                                f"\n–ó–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ 1-—É—é –º–∞—à–∏–Ω–∫—É."
                                f"\n–î–∞—Ç–∞: {search_date}"
                                f"\n–í—Ä–µ–º—è: {search_time}"
                                )
                self.db_position.update_position(sender, "1")

            elif self.laundry_db.is_slot_available(search_date, search_time, 2):
                # –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ—Ç –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
                self.reserve_slot(cursor, value_room, search_date, search_time, slot_number=2)
                self.laundry_db.conn.commit()
                self.write_message(sender, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ —Å—Ç–∏—Ä–∫—É."
                                            f"\n\n–î–∞—Ç–∞: {search_date}"
                                            f"\n–í—Ä–µ–º—è: {search_time}"
                                            f"\n–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∫–∞: 2-—è –æ—Ç –æ–∫–Ω–∞",
                                    self.menu_keyboard.keyboard_menu)
                self.sender_chat("üë§üë§üë§"
                                f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.first_name} {self.last_name}"
                                f"\nId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {sender}"
                                f"\n–ó–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ 2-—É—é –º–∞—à–∏–Ω–∫—É."
                                f"\n–î–∞—Ç–∞: {search_date}"
                                f"\n–í—Ä–µ–º—è: {search_time}"
                                )
                self.db_position.update_position(sender, "1")
            else:
                self.laundry_db.conn.rollback()  # –û—Ç–∫–∞—Ç–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
                self.write_message(sender, "–í–∞—Å —É—Å–ø–µ–ª–∏ –æ–ø–µ—Ä–µ–¥–∏–ª–∏ - —ç—Ç–æ –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è–ª–∏."
                                            "\n–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", self.menu_keyboard.keyboard_menu)
                self.sender_chat("‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è"
                                f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.first_name} {self.last_name}"
                                f"\nId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {sender}"
                                f"–ù–µ —Å–º–æ–≥ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è, —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ –æ–ø–µ—Ä–µ–¥–∏–ª–∏.")
                self.db_position.update_position(sender, "1")
        except Exception as e:
            self.laundry_db.conn.rollback()  # –û—Ç–∫–∞—Ç–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
            self.sender_chat(f"‚ÄºÔ∏èÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è"
                            f"\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å—Ç–∏—Ä–∫—É —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {sender} ({self.first_name} {self.last_name}).")


    def reserve_slot(self, cursor, room_number, date, time, slot_number):
                # –û–±–Ω–æ–≤–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å–ª–æ—Ç –Ω–æ–º–µ—Ä–æ–º –∫–æ–º–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute(
                    f"UPDATE laundry SET slot{slot_number} = %s WHERE date = %s AND time = %s "
                    f"AND (slot{slot_number} IS NULL OR slot{slot_number} = '–°–≤–æ–±–æ–¥–Ω–æ')",
                    (room_number, date, time)
            )

    def other_peoples_things(self, sender, received_message):
        answer = received_message
        if answer in ["–ú–∞—à–∏–Ω–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞, –Ω–æ —Ç—É—Ç —á—É–∂–∏–µ –≤–µ—â–∏!", "1"]:
            self.write_message(sender, "–ï—Å–ª–∏ –Ω–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –≤–∞—à–µ–π —Å—Ç–∏—Ä–∫–∏, –∞ –≤ –º–∞—à–∏–Ω–∫–µ –æ–∫–∞–∑–∞–ª–∏—Å—å —á—å–∏-—Ç–æ –≤–µ—â–∏, "
                                       "–ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–ª–æ–∂–∏—Ç–µ –∏—Ö –Ω–∞ –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫/–º–∞—à–∏–Ω–∫—É/–ø–æ–ª/–≤ –æ–∫–Ω–æ üßê", self.menu_keyboard.keyboard_menu)
            self.sender_chat("‚ÄºÔ∏è‚ö†Ô∏è‚ÄºÔ∏èÔ∏è - –ß—É–∂–∏–µ –≤–µ—â–∏ –≤ –º–∞—à–∏–Ω–∫–µ"
                             f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.first_name} {self.last_name}"
                             f"\nId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {sender}"
                             f"\n–ß—É–∂–∏–µ –≤–µ—â–∏ –≤ –º–∞—à–∏–Ω–∫–µ! –û–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ‚ÄºÔ∏è")
            self.db_position.update_position(sender, 1)
        elif answer in ['–í –º–∞—à–∏–Ω–∫–µ —Å—Ç–∏—Ä–∞—é—Ç—Å—è —á—å–∏-—Ç–æ –≤–µ—â–∏!', '2']:
            self.write_message(sender, "–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–± —ç—Ç–æ–º –ª—é–±–æ–º—É —Å–ª–µ–¥—É—é—â–µ–º—É —á–µ–ª–æ–≤–µ–∫—É –∏–∑ –ñ–∏–ª–∏—â–Ω–æ–π –∫–æ–º–∏—Å–∏–∏ –†–§–§:"
                                       "\n\n@vestlag (–ò–≤–∞–Ω –ì–∞–ª—å—Ü–µ–≤) - –ø—Ä–µ–¥—Å–∏–¥–∞—Ç–µ–ª—å –ñ–ö –†–§–§"
                                       "\n@alexandr_rff (–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –©–µ—Ä–±–∞–∫–æ–≤) - —Ä–∞—Å—Å–µ–ª–∏—Ç–µ–ª—å"
                                       "\n@s.mashkov00 (–°–µ—Ä–≥–µ–π –ú–∞—à–∫–æ–≤) - —Å—Ç–∞—Ä–æ—Å—Ç–∞ 5 —ç—Ç–∞–∂–∞"
                                       "\n@id670480584 (–ù–∏–∫–∏—Ç–∞ –¢–µ—Ä–µ—â–µ–Ω–∫–æ) - —Å—Ç–∞—Ä–æ—Å—Ç–∞ 6 —ç—Ç–∞–∂–∞", self.menu_keyboard.keyboard_menu)
            self.sender_chat("Ô∏è‚ÄºÔ∏è‚ÄºÔ∏èÔ∏è‚ÄºÔ∏èÔ∏è - –ß—É–∂–æ–π"
                             f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.first_name} {self.last_name}"
                             f"\nId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {sender}"
                             f"\n–ö—Ç–æ —Å—Ç–∏—Ä–∞–µ—Ç—Å—è –Ω–µ –≤ —Å–≤–æ–µ –≤—Ä–µ–º—è. –û–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ‚ÄºÔ∏è")
            self.db_position.update_position(sender, 1)

        elif answer == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            self.back_menu(sender)

        else:
            self.write_message(sender, "–û–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É! –ü–æ–∫–∞, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é.", self.menu_keyboard.keyboard_busy_laundry)

    def admin(self, sender):
        if self.read_admin(sender) == True:
            self.db_position.update_position(sender, 7)
            self.sender_chat(f"üë§üë§üë§ - –ê–¥–º–∏–Ω–∫–∞"
                             f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.first_name} {self.last_name}"
                             f"\nId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {sender}")

            self.write_message(sender, f"{self.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!\n"
                                       "\n‚ö†Ô∏è–ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å —Ä–∞—Å—Å—ã–ª–∫–æ–π‚ö†Ô∏è", self.menu_keyboard.keyboard_admin)
        else:
            self.understand_msg(sender)

    def admin_panel(self, sender, received_message):
        if received_message == "–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å—Ç–∏—Ä–∫—É":
            self.write_message(sender, "–ù–∞–ø–∏—à–∏—Ç–µ –¥–∏–∞–ø–æ–∑–æ–Ω –¥–∞—Ç –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 01.01.2023 - 30.01.2023")
            self.db_position.update_position(sender, 8)

        elif received_message == "–í—ã–≥—Ä—É–∑–∫–∞ –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π –ø—Ä–∞–≤–∏–ª —Å—Ç–∏—Ä–∫–∏":
            self.write_message(sender, "–í—ã–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π –ø—Ä–∞–≤–∏–ª...")
            self.db_position.update_position(sender, 9 )

        elif received_message == "–î–æ–±–∞–≤–∏—Ç—å –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è –ø—Ä–∞–≤–∏–ª":
            self.write_message(sender, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:"
                                       "\nhttps://vk.com/raccoon_balind")
            self.db_position.update_position(sender, 10)

        elif received_message == "–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º":
            self.write_message(sender, "–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º")

        elif received_message == "–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞":
            if sender == 290565131:
                self.write_message(sender, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:"
                                           "\n https://vk.com/raccoon_balind")
                self.db_position.update_position(sender, 12)

            else:
                self.write_message(sender, "–£ –≤–∞—Å –Ω–µ –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤! –ü—Ä–∏–∫–∞–∑ –ï–Ω–æ—Ç–∞.")

        elif received_message == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é":
            self.write_message(sender, "–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é", self.menu_keyboard.keyboard_menu)
            self.db_position.update_position(sender, 1)

    def send_file_laundry(self, sender, received_message):
        pattern = r'(\d{2}\.\d{2}\.\d{4}) - (\d{2}\.\d{2}\.\d{4})'
        match = re.match(pattern, received_message)
        start_date_str = match.group(1)
        end_date_str = match.group(2)

        start_date_components = start_date_str.split('.')
        end_date_components = end_date_str.split('.')

        start_date = date(int(start_date_components[2]), int(start_date_components[1]), int(start_date_components[0]))
        end_date = date(int(end_date_components[2]), int(end_date_components[1]), int(end_date_components[0]))
        data_from_db = self.laundry_db.get_laundry_values(start_date, end_date)

        if data_from_db:
            file_path = 'output.csv'
            with open(file_path, 'w+', encoding='cp1251', newline='') as csvfile:  # –ò—Å–ø–æ–ª—å–∑—É–µ–º codecs.open
                writer = csv.writer(csvfile, quoting=csv.QUOTE_MINIMAL, delimiter=',', lineterminator='\n')

                writer.writerow(['date', 'time', 'slot1', 'slot2'])
                for row in data_from_db:
                    writer.writerow(row)

            self.send_to_admin(sender)

        else:
            self.write_message(sender, '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å!')

        self.db_position.update_position(sender, 7)

    def send_to_admin(self, sender):
        upload_url = self.get_upload_url(self.vk, sender)
        file_path = 'output.csv'
        upload_response = self.upload_file(upload_url, file_path)

        doc_id, owner_id = self.save_file(self.vk, upload_response['file'])
        self.send_file(self.vk, sender, doc_id, owner_id)

    def get_upload_url(self, vk, sender):
        response = vk.docs.getMessagesUploadServer(type='doc', peer_id=sender)
        upload_url = response['upload_url']

        return upload_url

    def upload_file(self, upload_url, file_path):
        with open(file_path, 'rb') as file:
            files = {'file': file}
            response = requests.post(upload_url, files=files)
        return response.json()

    def save_file(self, vk, file):
        response = vk.docs.save(file=file)
        doc_id = response['doc']['id']
        owner_id = response['doc']['owner_id']
        return doc_id, owner_id

    def send_file(self, vk, sender, doc_id, owner_id):
        attachment = f"doc{owner_id}_{doc_id}"
        vk.messages.send(user_id=sender, message='–í–æ—Ç —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –∑–∞–ø–∏—Å—è—Ö –Ω–∞ —Å—Ç–∏—Ä–∫–µ', attachment=attachment, random_id=0)
        self.write_message(sender, '–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å ', self.menu_keyboard.keyboard_admin)

    def add_user_ban(self, sender, received_message):
        id_ban = self.url_to_iduser(received_message)
        self.db_position.update_ban(id_ban, 1)
        self.write_message(sender, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫!', self.menu_keyboard.keyboard_admin)
        self.db_position.update_position(sender, 7)

    def url_to_iduser(self, url):
        screen_name = url.split('/')[-1]
        id_ = self.authorize.method('users.get', {'user_ids': screen_name})[0]['id']
        return id_

    def read_admin(self, sender):
        with open("static/admin_profiles.txt", 'r') as file:
            existing_profiles = file.read().splitlines()

            if f"{sender}" in existing_profiles:
                return True

    def save_admin_profile(self, user_id):
        self.response = self.vk.users.get(user_ids=user_id)

        with open("static/admin_profiles.txt", "a+") as file:
            file.seek(0)
            existing_profiles = file.read().splitlines()

            if f"{user_id}" not in existing_profiles:
                file.write(f"{user_id}\n")

    def add_admin(self,sender, received_message):
        url = received_message
        try:
            id_admin = self.url_to_iduser(url)
            self.save_admin_profile(id_admin)
            self.write_message(sender, "–ê–¥–º–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω!", self.menu_keyboard.keyboard_admin)
            self.sender_chat("üë§üë§üë§ - –ê–¥–º–∏–Ω–∫–∞"
                             f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.first_name} {self.last_name}"
                             f"\nId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {sender}"
                             f"\n–î–æ–±–∞–≤–∏–ª –∞–¥–º–∏–Ω–∞ - {id_admin}")
        except Exception as ex:
            self.sender_chat("üë§üë§üë§ - –ê–¥–º–∏–Ω–∫–∞"
                             f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {self.first_name} {self.last_name}"
                             f"\nId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {sender}"
                             f"\n–û—à–∏–±–∫–∞: {ex}")
        self.db_position.update_position(sender, 1)

    def understand_msg(self, sender):
        self.write_message(sender, "–ù–µ –ø–æ–Ω—è–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.", self.menu_keyboard.keyboard_menu)

    def back_menu(self, sender):
        self.write_message(sender, f" {self.first_name}, –≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.menu_keyboard.keyboard_menu)
        self.db_position.update_position(sender, 1)

    def send_all_user(self, sender, received_message):
        self.write_message(sender, "–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º", self.menu_keyboard.keyboard_admin)
        self.db_position.update_position(sender, 7)

    def send_file_ban(self, sender, received_message):
        self.write_message(sender, "–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º", self.menu_keyboard.keyboard_admin)
        self.db_position.update_position(sender, 7)

